profiles {
  // Profile for microscope eagering. Includes parameters for the runs.
  microscope {
    // No cleanup for resume possibility
    cleanup = false

    // Increase number of concurrent jobs to 24
    executor {
      queueSize = 12
    }

    params{
      // Adapter removal
      clip_adapters_list = "/r1/people/thiseas_christos_lamnidis/Software/github/Schiffels-Popgen/MICROSCOPE-processing-pipeline/assets/adapter_list.txt"

      // Mapping reference and reference indexes
      fasta       = '/mnt/archgen/Reference_Genomes/Human/hs37d5/hs37d5.fa'
      fasta_index = '/mnt/archgen/Reference_Genomes/Human/hs37d5/hs37d5.fa.fai'
      bwa_index   = '/mnt/archgen/Reference_Genomes/Human/hs37d5/'
      seq_dict    = '/mnt/archgen/Reference_Genomes/Human/hs37d5/hs37d5.dict'
      
      // Mapping
      bwaalnn = 0.01
      
      // BAM filtering
      run_bam_filtering             = true            // Filter out unmapped reads, so barplots in MultiQC are not completely overtaken by unmapped reads.
      bam_unmapped_type             = 'fastq'         // Keep unmapped reads as a separate fastq file. Preferred format for possible future pathogen screening.
      bam_mapping_quality_threshold = 30              // Keep MapQ 30+ (together with snpcapture_bed is needed for poseidon "coverage on target SNPs" field)
      // The above also means that reads that are mapped with MapQ below 30 are lost after filtering, not present in the fastq OR the filtered bam!
      
      // Calculate on-target coverage and capture efficiency metrics
      snpcapture_bed = '/mnt/archgen/Reference_Genomes/Human/hs37d5/SNPCapBEDs/1240K.pos.list_hs37d5.0based.bed'
      
      // mtDNA to nuclear ratio
      run_mtnucratio    = true
      mtnucratio_header = "MT"
      
      // Bam Trimming
      run_trim_bam = true

      bamutils_clip_double_stranded_half_udg_left  = 2   // Trim 2 bp of either side for dsDNA half-UDG libraries.
      bamutils_clip_double_stranded_half_udg_right = 2   // Trim 2 bp of either side for dsDNA half-UDG libraries.
      bamutils_clip_double_stranded_none_udg_left  = 7   // Trim 7 bp of either side for dsDNA non-UDG libraries.
      bamutils_clip_double_stranded_none_udg_right = 7   // Trim 7 bp of either side for dsDNA non-UDG libraries.

      bamutils_clip_single_stranded_half_udg_left  = 0   // No trimming for ssDNA libraries, since --singelStrandMode removes damage artefacts.
      bamutils_clip_single_stranded_half_udg_right = 0   // No trimming for ssDNA libraries, since --singelStrandMode removes damage artefacts.
      bamutils_clip_single_stranded_none_udg_left  = 0   // No trimming for ssDNA libraries, since --singelStrandMode removes damage artefacts.
      bamutils_clip_single_stranded_none_udg_right = 0   // No trimming for ssDNA libraries, since --singelStrandMode removes damage artefacts.

      // Genotyping
      genotyping_source             = 'trimmed'          // Use trimmed bams for genotyping
      run_genotyping                = true
      genotyping_tool               = 'pileupcaller'
      pileupcaller_min_map_quality  = 30
      pileupcaller_min_base_quality = 30
      pileupcaller_bedfile          = '/mnt/archgen/Reference_Genomes/Human/hs37d5/SNPCapBEDs/1240K.pos.list_hs37d5.0based.bed'
      pileupcaller_snpfile          = '/mnt/archgen/public_data/Datashare_Boston_Jena_June2018.backup/1240K.snp'

      //Sex determination
      run_sexdeterrmine     = true
      sexdeterrmine_bedfile = '/mnt/archgen/Reference_Genomes/Human/hs37d5/SNPCapBEDs/1240K.pos.list_hs37d5.0based.bed'

      // Nuclear contamination
      run_nuclear_contamination = true
      contamination_chrom_name  = 'X'

      //1240k Coverage/Depth calculation
      run_bedtools_coverage = true
      anno_file             = '/mnt/archgen/Reference_Genomes/Human/hs37d5/SNPCapBEDs/1240K.pos.list_hs37d5.0based.bed'
    
      // Custom MQC config file with increased max_table_rows value
      multiqc_config = '/r1/people/thiseas_christos_lamnidis/Software/github/Schiffels-Popgen/MICROSCOPE-processing-pipeline/MICROSCOPE_multiqc_config.yaml'
    }
    // Change amount of resources provided to MarkD.
    process {
      maxRetries = 2
      
      withName:markduplicates {
        clusterOptions = { "-S /bin/bash -V -l h_vmem=${(task.memory.toGiga() * 3)}G,h=!(hpc1*)"}
        // MarkD has this weird behaviour that it will increaase runtime like crazy if not given enough memory because
        //   it keeps waiting for the garbage collector to kick in and clear some memory for it to continue. Bump up memory a lot to avoid this.
        //   Should drop runtime to a few minutes, down from multiple hours.
        memory = { task.attempt == 3 ? 32.GB : task.attempt == 2 ? 24.GB : 16.GB }
      }
      
      // More cores for bwa to reduce runtime
      withName:bwa {
        cpus = 16
        memory = { task.attempt == 3 ? 32.GB : task.attempt == 2 ? 24.GB : 16.GB }
      }
    }
  }

  // This profile is to be specified on INSTEAD of the microscope profile to prepare data for ena upload
  ena_processing {
    // No cleanup for resume possibility
    cleanup = false

    // Increase number of concurrent jobs to 24
    executor {
      queueSize = 12
    }

    params{
      // Skip any statistic generation
      skip_preseq             = true
      skip_damage_calculation = true
      skip_qualimap           = true
      skip_deduplication      = true

      // Adapter removal
      skip_collapse         = true // No read collapsing for paired-end data.
      clip_readlength       = 1    // If 0, then empty reads are left in, which breaks downstream processing.
      clip_min_read_quality = 0    // No base quality filtering.
      clip_adapters_list    = "/r1/people/thiseas_christos_lamnidis/Software/github/Schiffels-Popgen/MICROSCOPE-processing-pipeline/assets/adapter_list.txt"


      // Mapping reference and reference indexes
      fasta       = '/mnt/archgen/Reference_Genomes/Human/hs37d5/hs37d5.fa'
      fasta_index = '/mnt/archgen/Reference_Genomes/Human/hs37d5/hs37d5.fa.fai'
      bwa_index   = '/mnt/archgen/Reference_Genomes/Human/hs37d5/'
      seq_dict    = '/mnt/archgen/Reference_Genomes/Human/hs37d5/hs37d5.dict'
      
      // Mapping
      bwaalnn = 0.01

      // Custom MQC config file with increased max_table_rows value
      multiqc_config = '/r1/people/thiseas_christos_lamnidis/Software/github/Schiffels-Popgen/MICROSCOPE-processing-pipeline/MICROSCOPE_multiqc_config.yaml'
    }
  }

  // Profile for microscope_automated_analysis
  automated_analysis {
    process {
      maxRetries = 2
      withName: kinship_read {
        // Exit code is 11 when no individuals pass coverage. Exit code 1 when a single individual passes coverage.
        memory = { task.attempt * 2.GB }
        errorStrategy = { task.exitStatus in [11] ? 'ignore' : 'retry' } 
      }
      // withName: microscope_pca {
      //   // Exit code is 1 the PCA does not rerunning.
      //   errorStrategy = { task.exitStatus in [1] ? 'ignore' : 'retry' } 
      // }
    }
  }
}
